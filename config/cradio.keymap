/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
//&lt { quick-tap-ms = <200>; };

&sk {
    quick-release;
    release-after-ms = <500>;
};

/ {
    behaviors {
        //#ifndef HOMEY_HOLDING_TYPE
        //#define HOMEY_HOLDING_TYPE "balanced"
        //#endif
        //#ifndef HOMEY_HOLDING_TIME
        //#define HOMEY_HOLDING_TIME 270
        //#endif
        //#ifndef HOMEY_STREAK_DECAY
        //#define HOMEY_STREAK_DECAY 170
        //#endif
        //#ifndef HOMEY_REPEAT_DECAY
        //#define HOMEY_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat
        //#endif

        tapmod_thumb: miryoku_tapmod_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MOD_THUMB";
            flavor = "hold-preferred";
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //retro-tap;
        };

        layer_thumb: miryoku_home_row_layer_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LAYER_THUMB";
            flavor = "tap-preferred";
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            //retro-tap;
        };

        taphold: taphold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        tapholdlong: tapholdlong {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLDLONG";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };

        hrm_layer: hrm_layer {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            require-prior-idle-ms = <160>;
            label = "HRM_LAYER";
        };

        hrm_auriculaire: hrm_auriculaire {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <175>;
            label = "HRM_AURICULAIRE";
        };

        hrm_annulaire: hrm_annulaire {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <175>;
            label = "HRM_ANNULAIRE";
        };

        hrm_majeur: hrm_majeur {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <175>;
            label = "HRM_MAJEUR";
        };

        hrm_index: hrm_index {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <175>;
            label = "HRM_INDEX";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R                 &kp T                   &kp Y                     &kp U                              &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F                 &kp G                   &kp H                     &kp J                              &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V                 &kp B                   &kp N                     &kp M                              &kp COMMA  &kp DOT  &kp FSLH
                     &layer_thumb 1 SPACE  &layer_thumb 2 ENTER    &tapmod_thumb RSHIFT TAB  &tapmod_thumb RIGHT_ALT BACKSPACE
            >;
        };

        arrow_and_num {
            bindings = <
&kp PAGE_UP         &kp HOME          &kp UP       &kp END            &kp PAGE_DOWN    &kp KP_PLUS   &kp N4  &kp N5  &kp N6  &kp INSERT
&kp LC(LA(DELETE))  &kp LEFT          &kp DOWN     &kp RIGHT          &kp PSCRN        &kp KP_SLASH  &kp N1  &kp N2  &kp N3  &kp KP_MINUS
&kp LC(LG(F4))      &kp LC(LG(LEFT))  &kp LG(TAB)  &kp LC(LG(RIGHT))  &kp LC(LG(D))    &kp KP_DOT    &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY
                                                   &trans             &trans           &kp KP_NUM    &kp N0
            >;
        };

        Fx_and_Co {
            bindings = <
&kp CAPSLOCK  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp DELETE   &kp C_POWER    &kp C_VOL_UP       &kp F1         &kp F2   &kp F3   &kp F4
&kp LEFT_WIN  &kp ESC         &kp LCTRL     &kp TAB      &kp ENTER      &kp C_VOLUME_DOWN  &kp F5         &kp F6   &kp F7   &kp F8
&none         &kp LC(X)       &kp LC(INS)   &kp LS(INS)  &kp LG(V)      &kp C_MUTE         &kp F9         &kp F10  &kp F11  &kp F12
                                            &trans       &trans         &trans             &kp BACKSPACE
            >;
        };

        Gest_keyboard {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &none   &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &none   &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &none   &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        param {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
