/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
//&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        //#ifndef HOMEY_HOLDING_TYPE
        //#define HOMEY_HOLDING_TYPE "balanced"
        //#endif
        //#ifndef HOMEY_HOLDING_TIME
        //#define HOMEY_HOLDING_TIME 270
        //#endif
        //#ifndef HOMEY_STREAK_DECAY
        //#define HOMEY_STREAK_DECAY 170
        //#endif
        //#ifndef HOMEY_REPEAT_DECAY
        //#define HOMEY_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat
        //#endif

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //label = "Home row left";
            //hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 32>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            hold-trigger-on-release;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //label = "Home row right";
            //hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;
        };

        tapmod_thumb: miryoku_tapmod_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MOD_THUMB";
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29>;
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //retro-tap;
        };

        layer_thumb: miryoku_home_row_layer_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LAYER_THUMB";
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29>;
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;

            //require-prior-idle-ms = <170>;

            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            //retro-tap;
        };

        taphold: taphold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };

        tapholdlong: tapholdlong {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPHOLDLONG";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W             &kp E             &kp R                 &kp T                       &kp Y                   &kp U                       &kp I         &tapholdlong LS(O) O        &kp P
&hml LGUI A  &hml RIGHT_ALT S  &hml LCTRL D      &hml LSHFT F          &hml LEFT_ALT G             &hmr LEFT_ALT H         &hmr RSHFT J                &hmr RCTRL K  &hmr RIGHT_ALT L            &hmr LGUI SEMI
&kp Z        &kp X             &taphold LS(C) C  &kp V                 &kp B                       &taphold LS(N) N        &kp M                       &kp COMMA     &taphold LS(PERIOD) PERIOD  &kp FSLH
                                                 &layer_thumb 1 SPACE  &layer_thumb 2 BACKSPACE    &tapmod_thumb RALT TAB  &tapmod_thumb RSHIFT ENTER
            >;
        };

        Vim {
            bindings = <
&kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7         &kp NUMBER_8  &kp N9     &kp N0
&kp BACKSPACE  &kp LS(TAB)   &kp ESC       &kp TAB       &kp DEL        &kp LEFT      &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp PRINTSCREEN
&caps_word     &trans        &kp ENTER     &trans        &kp LS(DEL)    &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                                           &trans        &trans         &trans        &trans
            >;
        };

        Fn-Media {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6  &kp F7             &kp F8           &kp F9      &kp F10
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL    &trans  &trans             &trans           &trans      &trans
&trans        &trans        &kp F11       &kp F12       &trans            &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &trans
                                          &trans        &trans            &trans  &trans
            >;
        };
    };
};
